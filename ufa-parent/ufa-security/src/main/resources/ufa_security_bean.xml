<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:security="http://www.springframework.org/schema/security" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>

	<!-- AffirmativeBased表示只要有一个Voter通过权限验证，就可以访问 -->
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<!-- 是否允许所有的投票者弃权,如果为false，表示如果所有的投票者弃权，就禁止访问 -->
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<!-- 只对以rolePrefix开头的角色进行权限判定 -->
				<bean class="org.springframework.security.access.vote.RoleVoter">
					<!-- 注意，设置了rolePrefix,则从数据库里读取并组装后的角色名必须以此rolePrefix开头，否则Unsupported configuration attributes异常 -->
					<property name="rolePrefix" value="ROLE_" />
				</bean>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>

	
	<!-- <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter"> <property name="authenticationEntryPoint" 
		ref="authenticationEntryPoint" /> <property name="accessDeniedHandler" ref="accessDeniedHandler" /> </bean> -->

	<bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login" />
	</bean>

	<bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login/error" />
	</bean>
	
	<!-- 由具体项目配置 -->
	<!-- <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" /> -->
	
	<!-- <bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler"> -->
	<!-- <bean id="authenticationSuccessHandler" class="com.natie.sample.web.filter.CustomizedAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/index" />
		<property name="alwaysUseDefaultTargetUrl" value="false" />
		存放redirect目标URL的参数名称,位于URL的query string
		<property name="targetUrlParameter" value="targeturl" />
	</bean>
	 -->
	
	<!-- 自定义从数据库中取出权限信息 -->
	<!-- <bean id="securityMetadataSource" init-method="loadResourceDefine" class="org.ufa.security.service.InvocationSecurityMetadataSourceServiceImpl"> 
		<property name="roleService" ref="roleService"/> <property name="resourceService" ref="resourceService"/> </bean> -->
</beans>