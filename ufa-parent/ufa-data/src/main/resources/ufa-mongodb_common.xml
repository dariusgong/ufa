<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/data/mongo
          http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	<!-- 非集群时使用.w不能大于1 -->
	<mongo:mongo id="ufa.mongo" host="${mongodb.url}" port="${mongodb.port}" />
	<mongo:db-factory dbname="${mongodb.databaseName}" id="ufa.mongoDbFactory" username="${mongodb.username}"
		password="${mongodb.password}" mongo-ref="ufa.mongo"/>

	<bean id="ufa-nosql.fastestMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="ufa.mongoDbFactory" />
		<property name="writeResultChecking" value="EXCEPTION" />
		<property name="writeConcern">
			<bean class="com.mongodb.WriteConcern">
				<!-- 只在配置了集群复制时使用,表示写操作已经复制到了集群里的多少节点后才返回响应,默认是0.此参数可以防止集群环境下插入后立刻查询不到的问题 -->
				<!-- -1 = None, no checking is done.Don't even report network errors </li> -->
				<!-- 0 = default, don't call getLastError by default.Network socket errors raised </li> -->
				<!-- 1 = basic, call getLastError, but don't wait for slaves.Checks server for errors as well as network socket errors raised</li> -->
				<!-- 2+= wait for slaves.Checks servers (w) for errors as well as network socket errors raised </li> -->
				<constructor-arg name="w" value="-1"/> 
				<!-- 写入操作等待集群所有节点成功的超时时间,单位:毫秒 .0表示无限等待-->
				<constructor-arg name="wtimeout" value="3000" />
				<!-- 1.8版本开始废弃此参数,用j参数代替之.必须设置为false,否则抛异常说不能与j参数同时使用 -->
				<constructor-arg name="fsync" value="false" />
				<!-- 只在启动了journaling功能时使用.表示写入操作是否等待 journaling group提交之后才返回响应,如果是重要数据,建议设置为true,journaling类似oracle里的redo log -->
				<constructor-arg name="j" value="false" />
				<!-- 批量插入时,如果出现某一行插入错误之后,是否还继续执行后续的插入.只针对服务器端异常,不包括client端异常 -->
				<constructor-arg name="continueOnInsertError" value="true" />
			</bean>
		</property>
	</bean>
	<bean id="ufa-nosql.fasterMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="ufa.mongoDbFactory" />
		<property name="writeResultChecking" value="EXCEPTION" />
		<property name="writeConcern">
			<bean class="com.mongodb.WriteConcern">
				<!-- 只在配置了集群复制时使用,表示写操作已经复制到了集群里的多少节点后才返回响应,默认是0.此参数可以防止集群环境下插入后立刻查询不到的问题 -->
				<!-- -1 = None, no checking is done.Don't even report network errors </li> -->
				<!-- 0 = default, don't call getLastError by default.Network socket errors raised </li> -->
				<!-- 1 = basic, call getLastError, but don't wait for slaves.Checks server for errors as well as network socket errors raised</li> -->
				<!-- 2+= wait for slaves.Checks servers (w) for errors as well as network socket errors raised </li> -->
				<constructor-arg name="w" value="0"/> 
				<!-- 写入操作等待集群所有节点成功的超时时间,单位:毫秒 .0表示无限等待-->
				<constructor-arg name="wtimeout" value="5000" />
				<!-- 1.8版本开始废弃此参数,用j参数代替之.必须设置为false,否则抛异常说不能与j参数同时使用 -->
				<constructor-arg name="fsync" value="false" />
				<!-- 只在启动了journaling功能时使用.表示写入操作是否等待 journaling group提交之后才返回响应,如果是重要数据,建议设置为true,journaling类似oracle里的redo log -->
				<constructor-arg name="j" value="false" />
				<!-- 批量插入时,如果出现某一行插入错误之后,是否还继续执行后续的插入.只针对服务器端异常,不包括client端异常 -->
				<constructor-arg name="continueOnInsertError" value="false" />
			</bean>
		</property>
	</bean>
	<bean id="ufa-nosql.fastMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="ufa.mongoDbFactory" />
		<property name="writeResultChecking" value="EXCEPTION" />
		<property name="writeConcern">
			<bean class="com.mongodb.WriteConcern">
				<!-- 只在配置了集群复制时使用,表示写操作已经复制到了集群里的多少节点后才返回响应,默认是0.此参数可以防止集群环境下插入后立刻查询不到的问题 -->
				<!-- -1 = None, no checking is done.Don't even report network errors </li> -->
				<!-- 0 = default, don't call getLastError by default.Network socket errors raised </li> -->
				<!-- 1 = basic, call getLastError, but don't wait for slaves.Checks server for errors as well as network socket errors raised</li> -->
				<!-- 2+= wait for slaves.Checks servers (w) for errors as well as network socket errors raised </li> -->
				<constructor-arg name="w" value="1"/> 
				<!-- 写入操作等待集群所有节点成功的超时时间,单位:毫秒 .0表示无限等待-->
				<constructor-arg name="wtimeout" value="10000" />
				<!-- 1.8版本开始废弃此参数,用j参数代替之.必须设置为false,否则抛异常说不能与j参数同时使用-->
				<constructor-arg name="fsync" value="false" />
				<!-- 只在启动了journaling功能时使用.表示写入操作是否等待 journaling group提交之后才返回响应,如果是重要数据,建议设置为true,journaling类似oracle里的redo log -->
				<constructor-arg name="j" value="true" />
				<!-- 批量插入时,如果出现某一行插入错误之后,是否还继续执行后续的插入.只针对服务器端异常,不包括client端异常 -->
				<constructor-arg name="continueOnInsertError" value="false" />
			</bean>
		</property>
	</bean>
	<bean id="ufa-nosql.safestMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="ufa.mongoDbFactory" />
		<property name="writeResultChecking" value="EXCEPTION" />
		<property name="writeConcern">
			<bean class="com.mongodb.WriteConcern">
				<!-- 只在配置了集群复制时使用,表示写操作已经复制到了集群里的多少节点后才返回响应,默认是0.此参数可以防止集群环境下插入后立刻查询不到的问题 -->
				<!-- -1 = None, no checking is done.Don't even report network errors </li> -->
				<!-- 0 = default, don't call getLastError by default.Network socket errors raised </li> -->
				<!-- 1 = basic, call getLastError, but don't wait for slaves.Checks server for errors as well as network socket errors raised</li> -->
				<!-- 2+= wait for slaves.Checks servers (w) for errors as well as network socket errors raised </li> -->
				<constructor-arg name="w" value="1"/> 
				<!-- 写入操作等待集群所有节点成功的超时时间,单位:毫秒 .0表示无限等待-->
				<constructor-arg name="wtimeout" value="30000" />
				<!-- 1.8版本开始废弃此参数,用j参数代替之.必须设置为false,否则抛异常说不能与j参数同时使用 -->
				<constructor-arg name="fsync" value="false" />
				<!-- 只在启动了journaling功能时使用.表示写入操作是否等待 journaling group提交之后才返回响应,如果是重要数据,建议设置为true,journaling类似oracle里的redo log -->
				<constructor-arg name="j" value="true" />
				<!-- 批量插入时,如果出现某一行插入错误之后,是否还继续执行后续的插入.只针对服务器端异常,不包括client端异常 -->
				<constructor-arg name="continueOnInsertError" value="false" />
			</bean>
		</property>
	</bean>
	<bean id="ufa.mongoTemplateFactory" class="org.ufa.data.nosql.mongodb.MongoTemplateFactory">
		<constructor-arg name="fastest" ref="ufa-nosql.fastestMongoTemplate"/>
		<constructor-arg name="faster" ref="ufa-nosql.fasterMongoTemplate"/>
		<constructor-arg name="fast" ref="ufa-nosql.fastMongoTemplate"/>
		<constructor-arg name="safest" ref="ufa-nosql.safestMongoTemplate"/>
	</bean>


</beans>
