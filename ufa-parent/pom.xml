<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.ufa</groupId>
	<artifactId>ufa-parent</artifactId>
	<version>0.0.4-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modules>
		<module>ufa-core</module>
		<module>ufa-web-parent</module>
		<module>ufa-security</module>
    	<module>ufa-mybatis</module>
    	<module>ufa-log</module>
		<module>ufa-js</module>
    	<module>ufa-data</module>
    	<module>ufa-cache</module>
	</modules>
	<properties>
		<ufa.version>0.0.4-SNAPSHOT</ufa.version>
		<filters.base.path.test>src/test/filters</filters.base.path.test>
		<filters.base.path.main>src/main/filters</filters.base.path.main>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>		
		<!-- <spring.version>3.2.9.RELEASE</spring.version> -->
		<spring.version>4.1.4.RELEASE</spring.version>
		<spring.webflow.version>2.3.3.RELEASE</spring.webflow.version>
		<springSecurity.version>3.2.4.RELEASE</springSecurity.version>
		<spring.batch.version>3.0.0.RELEASE</spring.batch.version>
		<spring.data.version>1.5.0.RELEASE</spring.data.version>		
		<poi.version>3.8</poi.version>
		<slf4j.version>1.7.2</slf4j.version>
		<logback.version>1.0.7</logback.version>
		<aspectj.version>1.7.2</aspectj.version>
		<java.security.provider.bc.version>1.46</java.security.provider.bc.version>
		<commons.fileupload.version>1.3</commons.fileupload.version>
	</properties>

	<!-- 在settings.xml中指定repositories和pluginRepository -->

	<!-- 预定义依赖项的version,scope与exclusions,子模块中只需定义groupId和artifactId即可 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency><!-- dom4j使用XPP3Reader时依�?-->
				<groupId>xpp3</groupId>
				<artifactId>xpp3</artifactId>
				<version>1.1.4c</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.1.23</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency><!-- spring mvc的上传依赖-->
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
			</dependency>
			<!-- org.springframework.web.servlet.view.json.MappingJacksonJsonView依赖 -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>1.9.9</version>
			</dependency>
			<dependency><!-- 上述1.9.9版本的后续升级版spring3.1.2或以上版本才能支持-->
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.2.2</version>
			</dependency>
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc6</artifactId>
				<version>11.2.0.1.0</version>
			</dependency>
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>0.9.1.2</version>
			</dependency>
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp</artifactId>
				<version>0.7.1.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp-spring</artifactId>
				<version>0.7.1.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>com.microsoft</groupId>
				<artifactId>sqljdbc4</artifactId>
				<version>3.0.1301</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.30</version>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>1.6</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.7</version>
			</dependency>
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency><!-- 2.0或以上版本与tiles2.2.2版本�?��有问�?�?��注意.虽然tiles2.2.2中已经正确依赖了1.8版本,但需要全�?��免引�?.8以上版本覆盖�?.8版本 -->
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>1.8</version>
			</dependency>
			<dependency>
				<groupId>com.whalin</groupId>
				<artifactId>Memcached-Java-Client</artifactId>
				<version>3.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk16</artifactId>
				<version>${java.security.provider.bc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-ext-jdk16</artifactId>
				<version>${java.security.provider.bc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcmail-jdk16</artifactId>
				<version>${java.security.provider.bc.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency><!-- 用于覆盖Spring使用 common log -->
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency><!-- 替换log4j。原有的log4j.properites将失效，�?��转换为logback.xml.logback网站上有提供转换器：http://logback.qos.ch/translator/ -->
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency><!-- 提供了异常处理和进入�?��的日志接�?-->
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-ext</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency><!-- 依赖spring-core中的util -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency><!-- org.springframework.web.servlet.view.xml.MarshallingView依赖 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency><!-- 使用Aspectj来编制使用了@Transactional注释的类,以满足self-invocation -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency><!-- -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-instrument</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<!-- 放置在Tomcat的common lib中，并设<Context path="/myWebApp" docBase="/my/webApp/location"> 
					<Loader loaderClass="org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader" 
					useSystemClassLoaderAsParent="false"/> </Context> -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-instrument-tomcat</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.webflow</groupId>
				<artifactId>spring-webflow</artifactId>
				<version>${spring.webflow.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.webflow</groupId>
				<artifactId>spring-js</artifactId>
				<version>${spring.webflow.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${springSecurity.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency><!-- 缺少此依赖会抛Unable to locate Spring NamespaceHandler for XML 
					schema namespace异常 -->
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${springSecurity.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${springSecurity.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency><!-- 支持Annotation，例如jsr250 -->
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core-tiger</artifactId>
				<version>2.0.7.RELEASE</version>
				<exclusions>
					<!-- 依赖的spring-security-core版本太低 -->
					<exclusion>
						<groupId>org.springframework.security</groupId>
						<artifactId>spring-security-core</artifactId>
					</exclusion>
					<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.batch</groupId>
				<artifactId>spring-batch-core</artifactId>
				<version>${spring.batch.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.batch</groupId>
				<artifactId>spring-batch-infrastructure</artifactId>
				<version>${spring.batch.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.batch</groupId>
				<artifactId>spring-batch-test</artifactId>
				<version>${spring.batch.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-collections</groupId>
						<artifactId>commons-collections</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-mongodb</artifactId>
				<version>${spring.data.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-mongodb-cross-store</artifactId>
				<version>${spring.data.version}</version>
				<!-- 使用jcl-over-slf4j.jar替换spring的commons-logging -->
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- spring validation annotation start -->
			<dependency><!-- 此依赖有可能导致与JBOSS服务器使用的版本冲突,�?��额外确认JBOSS服务器的版本是否�?�� -->
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.3.0.Final</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>1.0.0.GA</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>2.2.7</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>2.2.6</version>
			</dependency>
			<!-- 以上4个依赖在每次升级时要额外确认是否�?��,其中jaxb可能有容器提�?建议使用scope �?provided -->
			<!-- spring validation annotation end -->
			<!-- 兼容Aries -->
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.16.1-GA</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty</artifactId>
				<version>3.5.8.Final</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.2.1</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>4.2.1</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpasyncclient</artifactId>
				<version>4.0-beta2</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.bsf</groupId>
				<artifactId>bsf-api</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency>
				<groupId>org.jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>1.0.14</version>
			</dependency>
			<dependency>
				<groupId>com.caucho</groupId>
				<artifactId>hessian</artifactId>
				<version>4.0.7</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>6.2.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymockclassextension</artifactId>
				<version>3.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.googlecode.jmockit</groupId>
				<artifactId>jmockit</artifactId>
				<version>0.999.17</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.grizzly</groupId>
				<artifactId>grizzly-core</artifactId>
				<version>2.2.18</version>
			</dependency>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>3.4.3</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion><!-- netty已经迁移�?groupId>io.netty</groupId> -->
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty</artifactId>
				<version>6.1.26</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<!-- 命令行输入mvn时，默认执行mvn package -->
		<defaultGoal>package</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin><!-- mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-jar-plugin 
					使用此命令显示指定插件的用法�?2.6之前版本会出现中文乱�?-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<!-- 读取java源文件时使用UTF-8编码,这样在解析java源文件中的注释时便不会出现中文乱�?-->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
					<showDeprecations>true</showDeprecations>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<!-- set encoding to something not platform dependent -->
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- dependency插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>
			<!-- surefire插件, 设定单元测试时只执行unit目录下的用例 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.2</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-testng</artifactId>
						<version>2.11</version>
					</dependency>
				</dependencies>
				<configuration>
					<!-- 注意,这里不建议用methods,可能会导致spring 测试框架的事务失�?-->
					<parallel>classes</parallel>
					<threadCount>5</threadCount>
					<argLine>-Xmx512M -Dfile.encoding=UTF-8</argLine>
					<excludedGroups>integration</excludedGroups>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/integration/**/*Test.java</exclude>
					</excludes>
					<forkMode>once</forkMode>
					<reportFormat>xml</reportFormat>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.11</version>
				<configuration>
					<groups>integration</groups>
					<includes>
						<include>**/integration/**/*Test.java</include>
					</includes>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>site</phase>
						<configuration>
							<tasks>
								<copy todir="target/classes">
									<fileset dir="src/main/java">
										<include name="**/*.java"/>
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<locales>zh_CN</locales>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
			</plugin>
			<!-- jar插件, 设定manifest文件内容 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<excludes>
						<exclude>**/logback-test.xml</exclude>
						<exclude>**/*-filter.properties</exclude>
					</excludes>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.7</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<configuration>
						<excludeResources>**/logback-test.xml</excludeResources>
						<attach>true</attach>
						<includePom>true</includePom>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin><!-- 旧版本存在BUG,当指定了classifier�?不install POM文件 -->
					<artifactId>maven-install-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- <execute> <runOnIncremental>false</runOnIncremental> </execute> -->
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin><!-- 单元测试详细报表 -->
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>surefire-report-maven-plugin</artifactId>
				<version>2.11</version>
				<inherited>true</inherited>
			</plugin>
			<plugin>
				<groupId>com.google.testability-explorer</groupId>
				<artifactId>maven-testability-plugin</artifactId>
				<version>1.3.3</version>
			</plugin>
			<plugin><!-- 生成包含标注上@todo或TODO的项目的列表 -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<tags>
						<tag>TODO</tag>
						<tag>@todo</tag>
						<tag>FIXME</tag>
						<tag>XXX</tag>
					</tags>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<updateReleaseInfo>true</updateReleaseInfo>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-eclipse-plugin</artifactId>
						<version>2.9</version>
						<configuration>
							<sourceExcludes>
								<sourceExclude>**/.svn/**</sourceExclude>
							</sourceExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>ci</id>
			<distributionManagement>
				<repository>
					<id>ci-releases</id>
					<name>Internal Releases</name>
					<url>http://${nexus.proxy.location}/nexus/content/repositories/releases/</url>
				</repository>
				<snapshotRepository>
					<id>ci-snapshot</id>
					<name>Development Snapshot</name>
					<url>http://${nexus.proxy.location}/nexus/content/repositories/snapshots/</url>
				</snapshotRepository>
			</distributionManagement>
			<build>
				<!-- <filters>
					<filter>${filters.base.path.test}/ci.properties</filter>
				</filters> -->
				<plugins>
					<!-- <plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.8.1</version>
						<configuration>
							不加此JVM启动参数,则在eclipse的console中输出乱
							<additionalJOption>-J-Dfile.encoding=UTF-8</additionalJOption>
							<encoding>UTF-8</encoding>
							<charset>UTF-8</charset>
							<docencoding>UTF-8</docencoding>
							<source>1.6</source>
							<show>private</show>
							<links>
								<link>http://docs.oracle.com/javase/6/docs/api</link>
							</links>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<phase>deploy</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin> -->
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>2.8</version>
						<configuration>
							<encoding>UTF-8</encoding>
							<configLocation>http://repo.lycheepay.com:17000/lycheepay/spec/checkstyle.xml</configLocation>
							<failsOnError>false</failsOnError>
							<maxAllowedViolations>3</maxAllowedViolations>
						</configuration>
						<!-- <dependencies> <dependency> <groupId>com.</groupId> <artifactId>quality</artifactId> 
							<version>0.0.1</version> </dependency> </dependencies> -->
					</plugin>
					<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-pmd-plugin</artifactId> 
						<version>2.5</version> <executions> <execution> <goals> <goal>check</goal> 
						</goals> </execution> </executions> <configuration> <outputEncoding>UTF-8</outputEncoding> 
						<linkXref>true</linkXref> <sourceEncoding>UTF-8</sourceEncoding> <encoding>UTF-8</encoding> 
						<targetJdk>1.6</targetJdk> </configuration> </plugin> -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>2.3.3</version>
						<configuration>
							<encoding>UTF-8</encoding>
							<outputEncoding>UTF-8</outputEncoding>
							<sourceEncoding>UTF-8</sourceEncoding>
							<findbugsXmlOutput>true</findbugsXmlOutput>
							<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
							<xmlOutput>true</xmlOutput>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.8.1</version>
						<configuration>
							<!-- 不加此JVM启动参数,则在eclipse的console中输出乱�?-->
							<additionalJOption>-J-Dfile.encoding=UTF-8</additionalJOption>
							<encoding>UTF-8</encoding>
							<charset>UTF-8</charset>
							<docencoding>UTF-8</docencoding>
							<source>1.7</source>
							<show>private</show>
							<links>
								<link>http://docs.oracle.com/javase/6/docs/api</link>
							</links>
						</configuration>
					</plugin>
					<plugin><!-- 生成源代码的有索引和交叉查询的HTML版本 -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<inputEncoding>UTF-8</inputEncoding>
							<outputEncoding>UTF-8</outputEncoding>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>2.8</version>
						<configuration>
							<encoding>UTF-8</encoding>
							<!-- configLocation>checkstyle/checkstyle5.xml</configLocation> -->
							<!-- <headerLocation>/LICENSE.txt</headerLocation> -->
						</configuration>
					</plugin>
					<!--<plugin> mvn pmd:pmd <groupId>org.apache.maven.plugins</groupId> 
						<artifactId>maven-pmd-plugin</artifactId> <version>2.5</version> <configuration> 
						<linkXref>true</linkXref> <sourceEncoding>UTF-8</sourceEncoding> <minimumTokens>100</minimumTokens> 
						<targetJdk>1.6</targetJdk> <rulesets> <ruleset>/rulesets/basic.xml</ruleset> 
						<ruleset>/rulesets/imports.xml</ruleset> <ruleset>/rulesets/unusedcode.xml</ruleset> 
						<ruleset>/rulesets/finalizers.xml</ruleset> </rulesets> </configuration> 
						</plugin> -->
					<plugin><!-- mvn clean -Dmaven.compile.debug site -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>2.3.3</version>
						<configuration>
							<effort>Max</effort>
							<threshold>Low</threshold>
							<findbugsXmlOutput>true</findbugsXmlOutput>
							<!-- Optional directory to put findbugs xml report -->
							<findbugsXmlOutputDirectory>target</findbugsXmlOutputDirectory>
							<!--<includeFilterFile>lib-filter.xml</includeFilterFile> -->
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>test</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>stg</id>
		</profile>
		<profile>
			<id>prd</id>
		</profile>
	</profiles>
</project>